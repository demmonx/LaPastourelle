\documentclass{report}

\usepackage[utf8]{inputenc}
\usepackage[top=2cm, bottom=2cm, left=2cm, right=1.5cm]{geometry}
\usepackage{xspace}
\usepackage[toc,page]{appendix} 
\usepackage[pdftex]{graphicx}
\usepackage{tikz}

\setlength{\columnseprule}{0.5pt}
 \parskip=10pt
\usepackage{sidecap}
\usepackage{wrapfig}
\usepackage{pgfkeys}
\usepackage{array}
\usepackage{tkz-graph}
\usetikzlibrary{arrows}
\usetikzlibrary{positioning}
\usepackage[francais]{babel}
\usepackage[T1]{fontenc}
\usepackage[bookmarks={true},bookmarksopen={true}]{hyperref}
\usepackage{multicol}
\usepackage{fancyhdr}
\usepackage[babel=true]{csquotes}
\usepackage{url} % Pour écrire des adresses cliquables.
\usepackage{lmodern} % Pour changer le pack de police.
\usepackage{etoolbox}
\usepackage{colortbl}
\usepackage[final]{pdfpages} 
\usepackage{titlesec}
\usepackage{multirow}
\newcommand{\chapterP}{\chapter}
\patchcmd{\chapter}{\thispagestyle{plain}}{\thispagestyle{fancy}}{}{}
\pagestyle{fancy}
\usepackage{caption}

\captionsetup[table]{labelformat=empty}

\renewcommand{\headrulewidth}{1pt}
\fancyhead[L]{Projet JEE}
\fancyhead[C]{Reseau Info 1}
\fancyhead[R]{\leftmark}
\renewcommand{\footrulewidth}{1pt}
\fancyfoot[L]{IUT de Rodez}
\fancyfoot[C]{- \thepage -}
\fancyfoot[R]{2014 - 2015}

\usepackage[light,math]{iwona}

\setcounter{secnumdepth}{5}
\renewcommand{\thechapter}{\Alph{chapter}}
\renewcommand{\thesection}{\Roman{section})}
\renewcommand{\thesubsection}{\arabic{subsection})}
\renewcommand{\thesubsubsection}{\alph{subsubsection})}
\renewcommand{\theparagraph}{\roman{paragraph})}
\parskip 5pt

\tikzstyle{line}=[-, thick]

\titlespacing\section{0pt}{8pt plus 4pt minus 2pt}{0pt plus 2pt minus 2pt}
\titlespacing\subsection{0pt}{8pt plus 4pt minus 2pt}{0pt plus 2pt minus 2pt}
\titlespacing\subsubsection{0pt}{8pt plus 4pt minus 2pt}{0pt plus 2pt minus
2pt}
 \titlespacing\paragraph{0pt}{2pt plus 1pt minus 0pt}{0pt plus 2pt minus 2pt}
\titlespacing\chapter{0pt}{5pt plus 4pt minus 2pt}{0pt plus 2pt minus 2pt}

\title{Projet JEE\\Reseau Info 1}
\author{DEMERY Cyril\\RIBEIRO DA SILVA Baptiste\\BARRE Sylvain\\GAUVRIT
  Bryan\\RIBAS Nathan}
\date{2014 - 2015}

\pdfinfo{%
  /Title    (Projet JEE - Reseau Info1)
  /Author   ()
  /Creator  (DEMERY Cyril - RIBEIRO DA SILVA Baptiste - BARRE Sylvain - GAUVRIT
  Bryan - RIBAS Nathan)
  /Producer ()
  /Subject  ()
  /Keywords ()
}

\begin{document}
\maketitle
\setcounter{tocdepth}{4}
\tableofcontents
\chapter{Plan Projet}
Dans cette partie, nous allons présenter la méthode utilisée afin d'organiser
notre projet, grâce à la planification, au travail de groupe et à la gestion
de configuration.
\section{Planification et ordonnancement}
Tout d'abord, étant donné que le projet dure une trentaine de jours, nous avons
décidé de le découper en trois itérations de 10 jours, chacune
terminée par une réunion avec le client, auxquelles s'ajoute éventuellement des
réunions additionnelles avec d'autres enseignants :
\par 
\begin{table}[!htb]
    \caption{Organisation du projet dans le temps}
    \begin{minipage}{.5\linewidth}
          \centering
      \caption{Calendrier du mois de Mai}
      \begin{tabular}{|c | c | c | c | c | c | c |}
  \hline
  Lundi & Mardi & Mercredi & Jeudi & Vendredi & Samedi & Dimanche \\
  \hline
27 & 28 & 29 & \cellcolor{yellow} 30 & \cellcolor{gray}1 & \cellcolor{gray}2 &
\cellcolor{gray}3
\\
  \hline
4 & 5 & 6 & 7 & \cellcolor{gray}8 & \cellcolor{gray}9 & \cellcolor{gray}10 \\ 
  \hline
\cellcolor{yellow} 11 & 12 & \cellcolor{green} 13 & \cellcolor{gray}14 &
\cellcolor{gray}15 & \cellcolor{gray}16 & \cellcolor{gray}17 \\
  \hline
18 & 19 & 20 & \cellcolor{yellow} 21 & 22 & \cellcolor{gray}23
& \cellcolor{gray}24 \\
  \hline
\cellcolor{gray}25 & 26 & 27 & 28 & 29 & \cellcolor{gray}30 & \cellcolor{gray}31
\\
  \hline
\cellcolor{yellow} 1 & 2 & 3 & 4 & 5 & \cellcolor{gray}6 & \cellcolor{gray}7 \\
  \hline
\end{tabular}
   \end{minipage}%
    \begin{minipage}{.5\linewidth}
      \centering
        \caption{Légende}
\begin{tabular}{| c | p{4cm} |}
  \hline
  Couleur & Description \\
  \hline
\cellcolor{yellow}& Réunion avec le client \\
  \hline
\cellcolor{green}& Réunion avec Mr Belières pour
l'interface Web \\
  \hline
\cellcolor{gray} & Jours non-travaillés à l'IUT \\ 
  \hline
\end{tabular}

    \end{minipage} 
\end{table}


\par Par la suite, nous avons essayé de planifier la première itération : 
\includepdf[pages=1]{debut.pdf}
\par Nous avons essayé de déterminer les tâches au mieux, mais nous nous sommes
heurtés à des difficultés étant donné que nous n'avons que de maigres
connaissances en JEE et ce que cela implique comme choix de réalisation.
\par Par conséquent, nous avons décidé réaliser cette planification, au moins
de la première itération, en nous donnant 4 jours pour acquérir des connaissances 
en JEE, puis 4 jours de plus pour concevoir la partie visible du site (architecture des 
pages) et en parallèle, nous avons trois jours pour réaliser la partie immergée de 
l'iceberg, c'est à dire les liens entre les diverses parties du site et leurs propriétés.
\par Toutefois, suite à la réunion du 29 avril avec Mr. Barrios, nous avons
revu nos objectifs, car le modèle de planification présenté ci-dessus
n'était pas un modèle agile mais plutôt celui d'un cycle de vie en cascade. 
De cette manière, tout était censé être établi d'avance et nous n'avions pas
prévu de revenir sur la conception.
\par Nous avions également mal estimé le temps des choses, en donnant trop de
temps de réalisation à la programmation côté client, alors que c'est la
programmation côté serveur la plus importante car c'est elle qui correspond aux
fonctions \og Métiers \fg. Idem pour l'apprentissage de JEE que nous avons sous
estimé, avec seulement 4 jours estimés, ce qui est trop peu pour assimiler la
persistance, les servlets, le JSP, l'architecture d'un site JEE ainsi que le
déploiement de serveur.
 \par Suite à cela, nous avons refait une planification
en intégrant les remarques.
\includepdf[pages=1]{iteration1.pdf}
Nous avons ici corrigé les erreurs de la précédente planification : 
\begin{itemize}
  \item Le cycle de vie est maintenant itératif
  \item La durée de l'étape \og Base de JEE \fg a été revue à la hausse
\end{itemize}
\par Nous répétons donc les étapes sur chaque itération, en rajoutant des
éléments à chaque fois. Par exemple, la première itération est basée sur le
forum, tandis que la deuxième est plus sur l'aspect blog et annonces.
\par Notons également l'affectation des ressources, avec Bryan, Cyril et Sylvain
qui s'occupent essentiellement de la partie serveur, tandis que Baptiste et
Nathan sont en charge des parties clientes. En ce qui concerne le JEE, tout le
monde apprend en individuel, mais à contrario la conception est effectuée par
tout le monde lors de réunions pour cette itération. 
\includepdf[pages=1]{iteration2.pdf}
\includepdf[pages=1]{iteration2taches.pdf}
\par Cette planification correspond à celle de la fin de la première itération
et du début de la seconde.
\par On constate que de nouvelles tâches se sont rajoutés : celles de
maintenance des composants déjà réalisés, afin d'assurer une compatibilité avec 
l'intégration des nouveaux composants. 
\par Pour ce qui est de la première itération, lors de sa fin, il manquait deux
classes sur six dans la partie programmation serveur, retard qui a été
finalement rattrapé deux jours plus tard. Également, l'avancement de la partie
cliente a été retardée car seul Baptiste a eu le temps de s'y consacrer.
\par Nous constatons également que la durée de la partie \og Base de JEE \fg a
été étendue pour atteindre une quinzaine de jours, car tous les membres du
groupe n'ont pas eu le temps de se consacrer sur l'apprentissage et ont pris du
retard dans la livraison des composants.
\par Ensuite, en ce qui concerne l'affectation des rôles, Cyril s'occupera de la
maintenance, Sylvain et Baptiste seront en charge de la conception et de la
programmation des nouveaux composants, tandis que Nathan et Bryan réaliseront
l'IHM et les servlets associées.
\par Toutefois, suite à la réunion de fin d'itération et de suivi de projet avec
Mr. Barrios, il a été convenu que seul Nathan allait s'occuper de l'IHM, que
Cyril et Baptiste allaient écrire les nouvelles côté serveur en binôme et que
Baptiste et Sylvain allaient s'occuper de l'intégration des classes métiers dans
l'IHM avec les servlets associées. 
\includepdf[pages=1]{iteration3.pdf}
\includepdf[pages=1]{iteration3_taches.pdf}
\par Sur cette dernière plannification, nous avons revu nos objectifs à la baisse, et certaines parties
ne seront pas traitées, comme la FaQ (Foire aux Questions), les pages
personnelles ainsi que le système de grade. 
\par Lors de la dernière réunion, il a été mentionné que le
travail devait être réparti plus équitablement au sein de l'équipe, et que ce
n'était pas à une personne de réaliser l'intégralité du projet en attribuant que
des rôles accessoires aux autres. C'est pourquoi le travail de cette itération a été répartie de telle manière qu'un membre ne s'occupe pas trop de plusieurs partie, comme ça a été le cas sur l'itération précédente, où finalement Cyril s'est occupé de la conception, de la programmation et de la maintenance. 
\par Comme vous pouvez le constater, nous sommes en retard sur l'itération 2 et c'est pourquoi les implémentations qui devaient être réalisées ont été annulés. Ainsi, cette itération aura uniquement pour but de maintenir ce qui a déjà été codé et de terminer l'interface qui est très en retard, avec seulement les pages d'inscription, connexion et d'index réalisée. 
\par Enfin, comme vous pouvez le constater, nous avons rajouter la tâche \og rédaction du rapport \fg qui nous a été conseillée par Mr. Barrios, même si le rapport a été écrit au fur et à mesure de l'avancement du projet.
\section{Structuration de l'équipe et organisation}
\par Dans cette partie nous présenterons la composition du groupe ainsi que les
choix d'organisation qui ont été effectués.

\par Pour la première itération, il a été convenu que chacun travaille seul afin
d'acquérir les bases. En revanche, pour les itérations 2 et 3, les membres du
groupe travailleront en binôme, afin de pouvoir partager les connaissances et
commettre moins d'erreurs de programmation. 

\par En ce qui concerne le rôle de chacun, il a été convenu que seul le rôle de
Gestionnaire de Configuration allait changer de responsable. Durant la première
itération, ce fut Baptiste qui occupa se poste, puis par la suite Nathan. Le
rôle de Chef de Projet a été attribué à Cyril, et celui de Secrétaire de Projet
à Sylvain. Nous avons présenté tout cela dans un tableau récapitulatif :

\begin{table}[!htb]
\caption{Composition du groupe} 
\centering
\begin{tabular}{| c | c | p{4cm} |}
	\hline
  Id. & Membres & Rôle\\\hline
  BS & BARRE Sylvain & Secrétaire de projet\\\hline
  DC & DEMERY Cyril & Chef de projet\\\hline
  GB & GAUVRIT Bryan & \\\hline
  RN & RIBAS Nathan &\multirow{2}{3cm}{Gestionnaire de
  configuration}\\\cline{1-2} RB &  RIBEIRO DA SILVA Baptiste &\\\hline
\end{tabular}
\end{table}

\section{Gestion de configuration}
Afin de travailler le plus efficacement possible nous nous sommes assurés que
tout le monde dispose de : 
\begin{itemize}
  \item Eclipse Luna SR2 JEE avec GlassfishTools et EclipseLink
  \item JDK 8.05 minimum
  \item Java EE 7
  \item Glassfish 4
  \item Oracle 10g/11g Express Edition
\end{itemize}

\par Nous avons également essayé d'implanter GIT, mais sans succès car nous
n'arrivions pas à régler l'intégration pour qu'elle avertisse lors de conflit
sur l'hébergement de fichiers retouchés par plusieurs personnes. Suite à la réunion de fin  de première itération, Mr. Barrios nous a conseillé d'utiliser SVN comme logiciel de gestion de version, mais nous n'avons pas eu le temps de mettre en place cet outil.
\par Du coup, lorsqu'un membre édite le code source ou les spécifications, il
rajoute son travail sur le dossier commun du Drive de Google et Cyril s'occupe
de centraliser la version stable et de la mettre en ligne.

\par En ce qui concerne la configuration de développement de chacun, voici un
tableau récapitulatif :
\begin{table}[!htb]
\caption{Configuration des membres du groupe} 
\centering
      \begin{tabular}{| p{3cm} | p{3cm} | p{3cm} | p{2cm} | p{4cm} |}
  \hline
  Membres & Machine & CPU & RAM & OS \\
  \hline
	\multirow{3}{*}{DEMERY Cyril} & Tour Appartement & i5-3570 @3.2GHz &
	8Go DDR3 & \begin{minipage}{3cm}
\medskip \par
\begin{itemize}
\item Windows 7 Ultimate x64
\item Ubuntu 14.04 x64
\end{itemize}
\medskip
\end{minipage}
	\\\cline{2-5}
	& Tour Maison & i7-3770k @3.3GHz & 8Go
	DDR3 
& Windows 7 Family x64
	\\\cline{2-5}
	& Laptop & T4400 @2.2GHz & 4Go DDR3 & Debian 7.4 x86
	\\\hline
	RIBAS Nathan & Laptop & i5-4210U @2.4GHz & 4Go DDR3 & Windows 7 Pro x64
	\\\hline
		BARRE Sylvain & Laptop & i7-4700MQ @2.4GHz & 4Go DDR3 & Windows 8.1 Home x64
	\\\hline
	        RIBEIRO DA SILVA Baptiste & Laptop & Celeron B800 @1.50hz & 6Go DDR3 & Windows 10 Pro x64
    \\\hline
	
\end{tabular}
   \end{table}
   \par Sur la page suivante, nous voyons que la configuration de chacun est très varié, et par conséquent, il a fallu utiliser des outils spécifiques à chaque environnement de travail. Ce n'est pas un problème pour des outils tels qu'Eclipse, Java et VisualParadigm qui sont multi-plateformes, de même que pour la base Oracle. Là où un soucis s'est posé, c'est avec les traitements de texte et les rapports. En effet, il était impossible d'ouvrir un document OpenOffice sous Word et inversement sans perdre la mise en page.
   \par Du coup, en ce qui concerne la documentation, elle est rédigée par Sylvain pour les
comptes rendus de réunion sous Microsoft Word 2013, et les rapports sont
rédigés en LaTeX sous Kile et Texlipse par Cyril, ainsi, on ne perd ni la mise en forme, ni les éventuels fichiers liés lors d'un changement de machine, il suffit d'avoir les bonnes bibliothèques installées. Tous ses documents sont ensuite centralisés au format PDF sur le dossier du groupe sur le Drive, en s'assurant de bien garder la dernière version.
\par De la même manière, nous avions un problème pour définir le logiciel de planification a utiliser, vu que MS Project n'était pas disponible sous Linux. Nous avons donc le choix soit entre un logiciel multi-plateformes, soit sur un système sur Internet. Notre choix s'est porté sur la première option et le logiciel Planner, qui ne dispose pas d'options très poussées, mais convient très bien pour un projet avec quelques personnes.

\chapter{Spécification}
	Nous avons choisi de réaliser le réseau communautaire "info1" en JEE. Pour
	cela, nous avons décidé de réaliser:
	\begin{itemize}
\item un forum
\item un système de blog
\item un système d'annonces
\item un système de messages privés
\end{itemize}
\par Bien sûr, si le temps nous le permet, nous perfectionnerons ces systèmes,
avec pourquoi pas un passage à la messagerie instantanée pour les messages privés, ainsi qu'un système de modération pour les diverses parties.
\section{Membres}
Un membre est identifié par une adresse e-mail et un mot de passe. Son
identité est valable sur n'importe quelle partie du site. Néanmoins, plusieurs informations sont nécessaires lors de l'inscription, comme le mot de passe, le nom, le prénom, et l'adresse mail. Le nom de l’utilisateur sera affiché en clair sur le site, car il s'agit d'un site destiné aux étudiants, donc inutile de parler via un pseudo. L'adresse mail fera office d'identifiant de connexion et devra donc être
 unique. Elle devra aussi être valide, car c'est elle qui sera utilisée en cas de perte de mot de passe. 
 \par Un membre inscrit pourra :
	\begin{itemize}
\item Changer son mot de passe
\item Créer des sujets sur le forum et modifier les siens
\item Publier des réponses sur le forum et modifier les siennes
	\end{itemize}
\par Un membre, connecté ou non, pourra consulter l'intégralité du site mais
seul un membre inscrit pourra publier et envoyer des messages privés.
 \par Les dates d'inscription et de
dernière connexion d'un membre seront également accessibles. Il sera possible 
de consulter la liste des membres inscrits sur le site.
\section{Forum}
Le forum permettra aux utilisateurs d'échanger et de poser des questions. Il 
sera défini par des sections, des catégories, des sujets et des réponses.
\subsection{Section}
Une section est identifié par un nom. Elle permet de regrouper des
catégories. Un nom de section est unique. Il sera possible de supprimer une 
section, et
de consulter la liste des catégories du forum.
\subsection{Catégorie}
Une catégorie est défini par une section, un nom et une description. Il ne
peut pas exister deux catégories avec le même nom dans le système. Elle pourra 
contenir des sujets.
Il sera possible de modifier la description de sa catégorie mais pas son
titre.
\par Également, nous disposerons d'une fonction permettant de supprimer une
catégorie, qui supprimera les sujets associées a celles-ci et les réponses 
associées à ces sujets, ainsi que d'une fonction pour changer la section de la
catégorie.
Enfin, il sera possible de consulter la liste des catégories du forum,
ainsi que la liste des catégories ayant pour parent une section donnée.
\subsection{Sujet}
Un sujet est posté par un membre dans une catégorie. Il comporte un titre, un 
contenu, et état qui permettra de savoir s'il est
résolu ou non, ainsi qu'une date de création et d'une date de dernière 
modification. Pour une catégorie donnée, le titre du sujet doit être unique.
\par Il ne sera possible de modifier un sujet que s'il n'est pas déjà résolu et
que l'on en est l'auteur. On pourra également changer l'état du sujet et le 
supprimer, en supprimant les réponses qui lui sont associées.
Il sera aussi possible de modifier la catégorie du sujet.
\par Enfin, il sera possible de consulter une liste de tous les sujets présents
dans une catégorie, ainsi que celle de tous les sujets du forum et celle de 
tous les sujets postés par un membre donné.
\par Si l'auteur est supprimé, le sujet est conservé, et l'auteur passe en
\og Anonyme \fg
\section{Réponse}
Une réponse est postée par un membre sur un sujet. Elle comporte un contenu
ainsi qu'une date de création et d'une date de dernière modification. Il sera
possible de modifier une réponse si l'on en est l'auteur. On pourra également la
 supprimer.
\par Enfin, il sera possible de consulter une liste de toutes les réponses d'un
sujet, ainsi que celle de toutes les réponses du forum et celle de toutes les 
réponses postées par un membre donné.
\par On ne pourra pas faire des réponses de réponses (encapsulation), il faudra
citer.
\par Dans le cas général, si l'auteur est supprimé, la réponse l'est aussi,
sauf pour les réponses du forum où l'auteur passe en \og Anonyme
\fg
\section{Système de blogs}
\subsection{Blog}
Un blog appartient à un seul et unique membre qui ne peut posséder qu'un
seul blog. Le blog possède un titre et peut posséder une description et contenir
des articles.
\subsection{Article}
Un article de blog est caractérisé par un titre, une description rapide (qui
prendra la valeur de la première phrase du contenu si aucune description n’est 
donnée) et un contenu. Le membre pourra à tout instant créer un article, le
modifier et le supprimer.

\par Pour les commentaires des articles, se référer au paragraphe concernant les
réponses.
\section{Annonces}
 Les annonces peuvent être vues par tout le monde. Chaque annonce est créée par 
un seul membre qui pourra par la suite la modifier ou même la supprimer. Pour
une annonce donnée et un utilisateur donné, il sera possible de commenter
l’annonce (mais pas un commentaire de l’annonce). Si l’auteur de l’annonce voit
son compte supprimé, l’annonce sera supprimée à son tour.
\par Pour les commentaires des annonces, se référer au paragraphe concernant les
réponses.

\section{Messages privés}  
\par Un message privé concerne deux membres : un expéditeur et un destinataire
via leur adresse mail (qui joue le rôle d'identifiant unique). L'expéditeur
rédige un message avec un titre à destination d'un autre membre existant, mais
pas lui-même. Il peut éditer et supprimer le message tant que le destinataire ne
l'a pas consulté.
\par Lorsque le message est lu, le statut
change pour l'expéditeur et le destinataire (\og non lu \fg devient \og lu \fg).
Le destinataire a la possibilité de répondre au message, sans toutefois
restituer le message précédent comme citation.
\par Le contenu du message devra être sécurisé afin que seul l'expéditeur et le
destinataire aient accès au titre et au corps de texte.

\chapter{Conception}
La conception est une partie essentiel du projet, elle permet d'indiquer la
direction à suivre pour tout ce qui concerne le domaine technique. Nous avons
dû prendre plusieurs décisions sur ce projet, que ce soit pour les bases de
données, les classes à créer ou la manière de programmer et l'IHM.
\section{Base de données}
Nous avons décidé d'utiliser la base de données Oracle express 10/11g, car
c'est une base capable de traiter des gros flux de données avec efficacité, et
c'est une base qui nous est familière. Nous aurions pu utiliser d'autres
options, comme la base de données embarquée de Java : JavaDB, ou encore MySQL.
Toutefois, certains éléments nous ont poussé vers la base d'Oracle.
\begin{table}[!htb]
\caption{Comparaison des différents SGBD} 
\centering
\begin{tabular}{|c | c | c | c | c |}
    \hline
  SGBD & Contraintes d'intégrité & Temps d'apprentissage & Puissance & Respect
de SQL\\\hline
  JavaDB & Ok & Moyen & Élevé & Bon\\\hline
  MySQL & Mal gérées & Moyen & Limitée & Moyenne\\\hline
  Oracle 10g & Ok & Rapide & Élevé & Très bon\\\hline
\end{tabular}
\end{table}
\par Comme vous le voyez dans ce tableau, nous aurions pu utiliser soit JavaDb,
soit Oracle, mais ayant été formés sur le SGBD Oracle cette année et
sachant le manipuler, nous avons opter pour celui-ci. Toutefois, il dispose de
plusieurs inconvénients, comme son poids et son coûts, également le fait que la
base ne soit pas embarquée, ce qui implique de devoir la recréer sur tous les
serveurs où l'on veut lancer le WAR. Enfin, il est disproportionné par rapport
à notre projet où JavaDB aurait été suffisant.

\par Concernant la conception du côté des bases de données, toutes nos classes
essentielles sont enregistrées dans la base. Nous sommes donc arrivés au schéma relationnel
suivant (+ est une clé primaire, \# une clé étrangère) : 
\begin{verbatim}
tmembre (+idmembre, lenom, leprenom, date_inscription, lepass, lemail, date_der_co);
tforum (+idfor, letitre);
tcategorie (+idcat, letitre, descript, #parent);
tmessage_titrable (+idmes, type_c, content, letitre, date_creation, date_modif, #lemembre);
tannonce (+idmes);
tsujet (+idmes, resolu, #lacat);
treponse (+idmes, content, date_creation, date_modif, #lesujet, #lemembre);
tblog (+idblog, letitre, content, date_creation, date_modif, #lemembre);
tarticle (+idmes, description, #leblog);
tmessageprive (+idmes, letitre, content, date_creation, date_modif, lu, #ledesti, #lemembre);
\end{verbatim}

\par Pour parvenir à ce schéma, nous n'avons pas réalisé de schéma Entité-Association, nous 
nous sommes directement appuyé sur le diagramme de classe que vous trouverez dans la partie suivante.

\section{Conception Orienté Objet}
Dans cette partie nous allons abordé la partie conception des classes \og Métiers \fg. Au début, nous avions effectué une conception trop générale du site, en essayant de représenter toutes les classes, dont certaines qui ne seraient peut-être même pas codées.
\par Suite à la première réunion, nous avons revu notre conception et produit seulement une conception synthétique de la partie forum avec quelques éléments. Donc nous avons produit un diagramme de classe suivant pour modéliser les relations que nous aimerions avoir :  
\par
\begin{tikzpicture}
\matrix [column sep=7mm, row sep=5mm] {
  & & \node (ca0) [draw, shape=rectangle] {prog:Categorie}; \\
 &  \node (ca1) [draw, shape=rectangle] {cpp:Categorie}; & 
  \node (ca2) [draw, shape=rectangle] {java:Categorie}; \\
   \node (me1) [draw, shape=rectangle] {cyril:Membre}; &
   \node (su1) [draw, shape=rectangle] {ihm:Sujet}; & 
  \node (su2) [draw, shape=rectangle] {abstractClass:Sujet}; & 
  \node (me2) [draw, shape=rectangle] {bryan:Membre}; \\
  \node (re1) [draw, shape=rectangle] {ok:Reponse}; & 
  \node (re2) [draw, shape=rectangle] {aide:Reponse}; &
   \node (me3) [draw, shape=rectangle] {sylvain:Membre}; \\
};
\draw[-, thick] (ca0) -- (ca1);
\draw[-, thick] (ca0) -- (ca2);
\draw[-, thick] (me1) -- (su1);
\draw[-, thick] (me2) -- (su2);
\draw[-, thick] (ca1) -- (su1);
\draw[-, thick] (ca1) -- (su2);
\draw[-, thick] (re1) -- (su1);
\draw[-, thick] (re2) -- (su1);
\draw[-, thick] (re1) -- (me1);
\draw[-, thick] (re2) -- (me3);
\end{tikzpicture}

 \par Ainsi, nous voyons qu'il serait souhaitable de modéliser qu'une catégorie peut avoir une catégorie parente. Egalement, nous voyons qu'un membre peut envoyer des sujets et des réponses, qu'une réponse doit être lié à un sujet, qu'un sujet doit appartenir à une catégorie, et que les catégorie et les sujets peuvent être vides (ex : java, abstractClass). Nous avons donc produit le diagramme de classe suivant :
 
\par
\begin{tikzpicture}
\matrix [column sep=7mm, row sep=5mm] {
  \node (ca) [draw, shape=rectangle] {Categorie}; &
  \node (su) [draw, shape=rectangle] {Sujet}; \\
  \node (me) [draw, shape=rectangle] {Membre}; & &
  \node (re) [draw, shape=rectangle] {Reponse}; \\
};
\path[-,every loop/.style={looseness=10}] (ca)
         edge  [in=120,out=60,loop] node {} ();
\draw[-, thick] (ca) -- (su);
\draw[-, thick] (su) -- (re);
\draw[-, thick] (me) -- (su);
\draw[-, thick] (me) -- (re);
\end{tikzpicture}

\par Toutefois, cette conception posait problème : il était difficile d'exprimer sur un diagramme qu'une catégorie parente ne devait pas avoir de description, etc. C'est pour cela que nous avons rajouté la classe Forum, ainsi sur le diagramme d'objet précédent, on remplace la Catégorie relié aux deux autres par un objet de type forum : 
\par
\begin{tikzpicture}
\matrix [column sep=7mm, row sep=5mm] {
\node (fo) [draw, shape=rectangle] {Forum}; &
  \node (ca) [draw, shape=rectangle] {Categorie}; &
  \node (su) [draw, shape=rectangle] {Sujet}; \\
  \node (me) [draw, shape=rectangle] {Membre}; & &
  \node (re) [draw, shape=rectangle] {Reponse}; \\
};
\draw[-, thick] (ca) -- (su);
\draw[-, thick] (su) -- (re);
\draw[-, thick] (fo) -- (ca);
\draw[-, thick] (me) -- (su);
\draw[-, thick] (me) -- (re);
\end{tikzpicture}
\par Cette conception était satisfaisante pour la première itération, puis nous sommes ensuite posé la question, lors de la deuxième itération, d'implanter le système de blog et d'annonce. Nous avions d'abord penser à réaliser quelque chose comme ça :

\par
\begin{tikzpicture}
\matrix [column sep=7mm, row sep=5mm] {
   \node (me1) [draw, shape=rectangle] {cyril:Membre}; &
   \node (a1) [draw, shape=rectangle] {vtt:Annonce}; & 
   \node (a2) [draw, shape=rectangle] {anniversaire:Annonce};&
  \node (me2) [draw, shape=rectangle] {bryan:Membre}; &
  \node (bl1) [draw, shape=rectangle] {unblog:Blog}; \\
  \node (re1) [draw, shape=rectangle] {ok:Reponse}; & 
  \node (re2) [draw, shape=rectangle] {aide:Reponse}; &
   \node (me3) [draw, shape=rectangle] {sylvain:Membre}; &
   \node (re3) [draw, shape=rectangle] {comment:Reponse}; &
    \node (n1) [draw, shape=rectangle] {maVie:News}; \\
};
\draw[-, thick] (re1) -- (me1);
\draw[-, thick] (a1) -- (me1);
\draw[-, thick] (a2) -- (me2);
\draw[-, thick] (a1) -- (re1);
\draw[-, thick] (a1) -- (re2);
\draw[-, thick] (me3) -- (re2);
\draw[-, thick] (n1) -- (bl1);
\draw[-, thick] (n1) -- (me2);
\draw[-, thick] (n1) -- (re3);
\draw[-, thick] (re3) -- (me3);
\end{tikzpicture}
\par

\par
\begin{tikzpicture}
\matrix [column sep=7mm, row sep=5mm] {
   \node (me1) [draw, shape=rectangle] {cyril:Membre}; &
   \node (mp1) [draw, shape=rectangle] {coucou:MessagePrive}; & 
    \node (me2) [draw, shape=rectangle] {sylvain:Membre}; \\
};
\draw[-, thick] (mp1) -- (me1);
\draw[-, thick] (mp1) -- (me2);
\end{tikzpicture}
\par

\par Du côté diagramme de classe, on peut traduire cela de la manière suivante : un message est relié à deux membres, un blog appartient à un membre qui peut poster des articles dessus, auxquels les autres membres peuvent répondre. Concernant les annonces, on voit qu'un membre peut en poster une et les autres peuvent commenter. Par la suite, étant donné que nous avons principalement utilisé l'héritage et que ça ne modifie pas les liaisons entre les classes, nous n'avons pas refait de diagramme de classes.

\par
\begin{tikzpicture}
\matrix [column sep=7mm, row sep=5mm] {
\node (forum) [draw, shape=rectangle] {Forum}; &  & &
  \node (membre) [draw, shape=rectangle] {Membre}; & 
    \node (mp) [draw, shape=rectangle] {Mesage Prive};  \\
  \node (categorie) [draw, shape=rectangle] {Categorie}; \\
  \node (sujet) [draw, shape=rectangle] {Sujet}; &
  \node (blog) [draw, shape=rectangle] {Blog}; & 
  \node (news) [draw, shape=rectangle] {News}; \\
  & & \node (reponse) [draw, shape=rectangle] {Reponse}; & 
  \node (annonce) [draw, shape=rectangle] {Annonce}; \\
};
\draw[-,bend right]  (membre) edge (mp);
\draw[-, thick] (categorie) -- (sujet);
\draw[-, thick] (sujet) -- (reponse);
\draw[-, thick] (forum) -- (categorie);
\draw[-, thick] (membre) -- (sujet);
\draw[-, thick] (membre) -- (reponse);
\draw[-, thick] (membre) -- (mp);
\draw[-, thick] (membre) -- (blog);
\draw[-, thick] (membre) -- (news);
\draw[-, thick] (membre) -- (annonce);
\draw[-, thick] (blog) -- (news);
\draw[-, thick] (news) -- (reponse);
\draw[-, thick] (annonce) -- (reponse);

\end{tikzpicture}

\par Cependant, vu le nombre trop important de liens, nous avons longtemps hésité, puis nous avons regroupement les éléments ayant un titre et pouvant recevoir des réponses ensemble, sous la classe Article, il a fallu également regrouper les messages ensemble car ils ont des propriétés communes, nous avons donc décidé de faire la classe Message, dont hérite Article, Réponse et Message Privé.

\begin{tikzpicture}
\matrix [column sep=7mm, row sep=5mm] {
\node (membre) [draw, shape=rectangle] {Membre}; & &
\node (message) [draw, shape=rectangle] {Message}; & & \\
\node (blog) [draw, shape=rectangle] {Blog}; & 
\node (mp) [draw, shape=rectangle] {Mesage Prive}; &
\node (article) [draw, shape=rectangle] {Article}; & 
\node (reponse) [draw, shape=rectangle] {Reponse}; & 
\node (forum) [draw, shape=rectangle] {Forum}; \\

 \node (news) [draw, shape=rectangle] {News}; & & 
 \node (annonce) [draw, shape=rectangle] {Annonce}; &
 \node (sujet) [draw, shape=rectangle] {Sujet}; & 
 \node (categorie) [draw, shape=rectangle] {Categorie};\\\\
};
\draw[-,bend right]  (membre) edge (mp);
\draw[-, thick] (categorie) -- (sujet);
\draw[-, thick] (article) -- (reponse);
\draw[-, thick] (forum) -- (categorie);
\draw[<-, thick] (article) -- (sujet);
\draw[-, thick] (membre) -- (message);
\draw[-, thick] (membre) -- (mp);
\draw[-, thick] (membre) -- (blog);
\draw[<-, thick] (message) -- (article);
\draw[<-, thick] (article) -- (news);
\draw[<-, thick] (article) -- (annonce);
\draw[<-, thick] (message) -- (reponse);
\draw[<-, thick] (message) -- (mp);
\draw[-, thick] (blog) -- (news);
\end{tikzpicture}

\par Ainsi la conception était facilement compréhensible. Toutefois, nous nous sommes heurtés à un problème avec le titrage des éléments. En effet, Blog, Titre, Categorie, Messsage Prive, News et Article possèdes un titre. Hors, nous n'avons pas regroupé ces champs, ce qui a donné lieu à des redondances inutiles. Mais suite à la deuxième réunion avec Mr. Barrios, nous avons eu des explications sur comment bien modéliser un cas de type : il faut utiliser la réalisation, l'association et l'héritage. Ce qui donne lieu au modèle suivant : 
\par
\begin{tikzpicture}
\matrix [column sep=7mm, row sep=5mm] {
\node (membre) [draw, shape=rectangle] {Membre}; & &
\node (message) [draw, shape=rectangle] {Message}; & & \\
\node (blog) [draw, shape=rectangle] {Blog}; & 
\node (mp) [draw, shape=rectangle] {Mesage Prive}; &
\node (article) [draw, shape=rectangle] {Article}; & 
\node (reponse) [draw, shape=rectangle] {Reponse};  \\

 & \node (news) [draw, shape=rectangle] {News}; & 
 \node (annonce) [draw, shape=rectangle] {Annonce}; &
 \node (sujet) [draw, shape=rectangle] {Sujet}; & 
 \node (categorie) [draw, shape=rectangle] {Categorie}; & 
 \node (forum) [draw, shape=rectangle] {Forum};\\\\\\
  & \node (avectitre) [draw, shape=rectangle] {AvecTitre};  & &
  \node (titrable) [draw, shape=circle] {Titrable};\\
};
\draw[-,bend right]  (membre) edge (mp);
\draw[-, thick] (categorie) -- (sujet);
\draw[-, thick] (article) -- (reponse);
\draw[-, thick] (forum) -- (categorie);
\draw[<-, thick] (article) -- (sujet);
\draw[-, thick] (membre) -- (message);
\draw[-, thick] (membre) -- (mp);
\draw[-, thick] (membre) -- (blog);
\draw[<-, thick] (message) -- (article);
\draw[<-, thick] (article) -- (news);
\draw[<-, thick] (article) -- (annonce);
\draw[<-, thick] (message) -- (reponse);
\draw[<-, thick] (message) -- (mp);
\draw[<-, thick] (avectitre) -- (blog);
\draw[<-, thick] (avectitre) -- (categorie);
\draw[<-, thick] (avectitre) -- (forum);
\draw[<-, thick] (avectitre) -- (news);
\draw[-, thick] (blog) -- (news);
\draw[->,dashed, thick] (avectitre) -- (titrable);
\end{tikzpicture}

\par Ici, on a regroupé avec l'héritage les classes qui se définissent quasiment qu'avec un titre et donc n'ont pas de propriétés compliqués. Toutefois, il reste encore à définir les classes comme Article et MessagePrive qui ont le titre comme champ, mais qui ne sont peuvent pas être une sous classe de titre car elles ont des champs communs entre elles et intègrent des associations. Il faut donc modéliser cette association. Au début, nous pensions relier directement la classe AvecTitre avec Article, puis lors des tests nous nous sommes aperçus de gros inconvénients dans le Mapping actuel de persistance pour garder cette association. Il a donc fallu faire une sous classe de AvecTitre qui sera \og embarquée \fg dans les associations. Également, vu que la méthode supprimer était présente dans la plupart des classes, nous en avons profité pour réaliser une interface réalisée par Message, Membre, Blog, Forum et Categorie. Ainsi, on obtient le diagramme suivant : 

\par
\begin{tikzpicture}
\matrix [column sep=7mm, row sep=5mm] {
& \node (supprimable) [draw, shape=circle] {Supprimable};\\
\node (membre) [draw, shape=rectangle] {Membre}; & &
\node (message) [draw, shape=rectangle] {Message}; & & \\
 & 
\node (mp) [draw, shape=rectangle] {Mesage Prive}; &
\node (article) [draw, shape=rectangle] {Article}; & 
\node (reponse) [draw, shape=rectangle] {Reponse};  \\

 & \node (titre) [draw, shape=rectangle] {Titre}; 
 & \node (news) [draw, shape=rectangle] {News}; & 
 \node (annonce) [draw, shape=rectangle] {Annonce}; &
 \node (sujet) [draw, shape=rectangle] {Sujet}; & 
 \node (categorie) [draw, shape=rectangle] {Categorie}; & 
 \node (forum) [draw, shape=rectangle] {Forum}; \\\\\\
 \node (blog) [draw, shape=rectangle] {Blog}; & & \node (avectitre) [draw, shape=rectangle] {AvecTitre};  & &
  \node (titrable) [draw, shape=circle] {Titrable};\\
};
\draw[-,bend right]  (membre) edge (mp);
\draw[-, thick] (categorie) -- (sujet);
\draw[-, thick] (article) -- (reponse);
\draw[-, thick] (forum) -- (categorie);
\draw[<-, thick] (article) -- (sujet);
\draw[-, thick] (membre) -- (message);
\draw[-, thick] (membre) -- (mp);
\draw[-, thick] (membre) -- (blog);
\draw[<-, thick] (message) -- (article);
\draw[<-, thick] (article) -- (news);
\draw[<-, thick] (article) -- (annonce);
\draw[<-, thick] (message) -- (reponse);
\draw[<-, thick] (message) -- (mp);
\draw[-, thick] (article) -- (titre);
\draw[-, thick] (mp) -- (titre);
\draw[<-, thick] (avectitre) -- (titre);
\draw[<-, thick] (avectitre) -- (blog);
\draw[<-, thick] (avectitre) -- (categorie);
\draw[<-, thick] (avectitre) -- (forum);
\draw[<-, thick] (avectitre) -- (news);
\draw[-, thick] (blog) -- (news);
\draw[->,dashed, thick] (avectitre) -- (titrable);
\draw[->,dashed, thick] (blog) -- (supprimable);
\draw[->,dashed, thick] (membre) -- (supprimable);
\draw[->,dashed, thick] (message) -- (supprimable);
\draw[->,dashed, thick] (categorie) -- (supprimable);
\draw[->,dashed, thick] (forum) -- (supprimable);
\end{tikzpicture}

\par Ici, nous arrivons à une version à peu près stable du diagramme de classe, qui offre une flexibilité suffisante pour l'implantation de nouveaux composants lors de phases de développement suivantes (maintenance, souhait du client, etc).

\section{IHM}
L'IHM n'est pas un des points les plus importants de notre site, car il ne sera pas visible sur Internet, mais ne doit toutefois pas être négligé.
\par Au début, nous pensions réaliser un site sur des tons plutôt verts/bleus et avec un menu de chaque côté : à gauche pour la navigation sur le forum, à droite pour les informations sur le membre. Toutefois, suite à la réunion avec Mr. Belières, il a été convenu de garder uniquement le menu de navigation situé à gauche, et de placer les informations du membre dans un espace déroulant de la barre de menu. Également, il nous a été conseillé de s'appuyer sur la charte graphique de l'IUT pour ce qui concerne notre jeu de couleur. Ainsi, après cela, nous avons choisi un jeu de couleur gris/rouge.
\subsection{Charte graphique}
\subsection{Étude de l'existant}
\subsection{Choix}


\chapter{Code}
Dans cette partie seront présentés les codes sources de nos différents
composants. On commencera par les classes utilitaires, puis en allant des
classes les moins dépendantes aux plus dépendantes, en présentant à chaque fois
la classe puis la classe de test associée.
Enfin, nous terminerons par le code de l'IHM et des servlets associées.
// Todo Mettre les fichiers + présenter l'arborescence
 
\chapter{Tests}
// Todo commenter les jeux de tests
\chapter{Conclusion}
Ce projet, le premier \og vrai \fg projet que nous avons réalisé nous a paru satisfaisant, même si des choses auraient pu être améliorées. 
Commençons déjà par les points positifs. Ce projet a permis de réunir toutes nos compétences en informatique afin d'y arriver, que ce soit en Java, en modélisation, en SQL, en IHM, en Javascript/jQuery ou en langage Web (HTML/CSS). Également, il nous a donné une première expérience de ce qu'est le travail en \og équipe \fg. En ce qui concerne le résultat en lui-même, mais si certaines choses n'ont pas été réalisées (grade, pages personnelles), le projet a été globalement bien réussi, et tout ce qui a été développé fonctionne bien. L'IHM, même si ce n'était pas le point le plus important, a été correctement réalisée et est agréable à utiliser. 
\par Cette expérience nous a surtout permis d'acquérir de nouvelles compétences en gestion de projet avec des rôles comme chef de projet, gestionnaire de configuration et secrétaire de projet. Ces rôles ont été assez bien respecté, sauf pour celui de gestionnaire de configuration où le travail n'a pas été suffisant pour permettre à tout le monde de travailler dans de bonnes conditions. En effet, c'est le chef de projet qui s'occupait de garder toujours la dernière version stable du projet car les gestionnaires de configuration n'ont pas réussi à implanter un logiciel de gestion de  version comme GIT ou SVN.
\par Toujours sur la gestion de projet, ce projet nous a donné un aperçu de la difficulté de tenir un délai, avec des retards de livraison dès la première itération. En raison de cela, il a fallu corriger plusieurs fois changer la planification l'attribution des rôles, et même parfois donner le travail à un autre membre qui avait fini le sien. Nous avons du également nous occuper d'organiser des réunions à intervalle régulier, tous les deux/trois jours, pour faire un point sur l'avancement du projet entre nous, ce que nous n'avions pas fait lors du projet du semestre précédent. Malgré cela, il y a eu des problèmes de communication avec du travail effectué en double, ou pas rendu, ainsi que des soucis avec des personnes qui travaillaient beaucoup plus que d'autres, et donc qui terminaient leurs tâches bien avant le reste du groupe.
\par D'un point de vue technique, nous avons appris les bases de la communication entre Java et une base de données, à travers JPA pour notre groupe qui permet de manipuler les données très simplement grâce au gestionnaire d'entité (EntityManager). Il a pour cela fallu écrire des  requêtes en JPQL (Java Persistence Query Language) afin de récupérer des n-uplets dans la base de données.
\par Enfin, nous avons appris à maîtriser l'architecture d'un projet Web simple avec Java Enterprise Edition, d'une part à travers l'utilisation du serveur GlassFish, mais aussi grâce à la réalisation de servlets, les scripts Java côté serveur, et de JSP qui sont les pages côté client et qui s'occupent de l'affichage. Afin de simplifier les choses et de sécuriser les données, nous nous sommes servi du JSTL pour récupérer les données à afficher, ce qui nous a permis d'apprendre une nouvelle technique de mise en page Web, en n'écrivant pas les données en brut mais plutôt en utilisant des boucles pour générer des tableaux ou des listes.
\par Pour conclure, nous pouvons dire que le projet a été globalement bien réussi malgré les problèmes de gestion de projet et d'apprentissage d'une nouvelle technologie.

\end{document}